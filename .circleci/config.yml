version: 2.1

docker-build: &docker-build
  steps:
    - checkout
    - setup_remote_docker
    - run:
        name: Build Docker image
        command: |
          cd $REPO_SUBDIR
          docker build -t $IMAGE_NAME:latest .
    - run:
        name: Archive Docker image
        command: docker save -o image.tar $IMAGE_NAME
    - persist_to_workspace:
        root: .
        paths:
          - ./image.tar

docker-publish: &docker-publish
  steps:
    - attach_workspace:
        at: /tmp/workspace
    - setup_remote_docker
    - run:
        name: Load archived Docker image
        command: docker load -i /tmp/workspace/image.tar
    - run:
        name: Publish Docker Image to Docker Hub
        command: |
          echo "$DOCKERHUB_PASSWORD" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
          IMAGE_TAG="0.0.${CIRCLE_SHA1}"
          docker tag $IMAGE_NAME:latest $IMAGE_NAME:$IMAGE_TAG
          docker push $IMAGE_NAME:latest
          docker push $IMAGE_NAME:$IMAGE_TAG

branch-filters: &branch-filters
  filters:
    branches:
      only:
        - master
        - staging

executors:
  docker-publisher:
    environment:
      IMAGE_NAME: pennlabs/pennlabs.org
      REPO_SUBDIR: "."
    docker:
      - image: circleci/buildpack-deps:buster
jobs:
  test:
    working_directory: ~/pennlabs
    docker:
      - image: circleci/node:10
        environment:
          MONGO_URI: mongodb://127.0.0.1:27017/data
      - image: circleci/mongo:4.2.0
    steps:
      - checkout
      - restore_cache:
          key: dependency-cache-{{ checksum "yarn.lock" }}
      - run:
          name: Install dependencies
          command: |
            yarn install
      - save_cache:
          key: dependency-cache-{{ checksum "yarn.lock" }}
          paths:
            - ./node_modules
            - ~/.cache/yarn
      - run:
          name: Lint
          command: |
            yarn lint
  build:
    executor: docker-publisher
    <<: *docker-build
  publish:
    executor: docker-publisher
    <<: *docker-publish
  deploy:
    working_directory: ~/pennlabs
    docker:
      - image: pennlabs/labs-helm
    steps:
      - checkout
      - run:
          name: Deploy to k8s
          command: /deploy.sh
workflows:
  version: 2
  build-and-deploy:
    jobs:
      - test
      - build:
          requires:
            - test
          <<: *branch-filters
      - publish:
          requires:
            - build
          context: docker-publish
          <<: *branch-filters
      - deploy:
          requires:
            - publish
          context: k8s-deploy
          <<: *branch-filters
